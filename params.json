{"name":"React-drag-sortable","tagline":"Customizable sortable (by drag and drop) list with React","body":"## Installation\r\n\r\n```bash\r\nnpm install react-drag-sortable\r\n```\r\n\r\n## Description\r\n\r\nMake a list of elements (array) sortable by drag and drop. Allows to specify a customizable placeholder to be displayed on the drop area.\r\nAllows to customize the style of items at every step (normal, being dragged, placeholder).\r\nThe component supports both horizontal and vertical lists. The component uses interact.js for crossbrowser dragging (see [http://interactjs.io](http://interactjs.io/) for more details).\r\nWorks with items of variables width (in %)  as well as static width.\r\n\r\nSUPPORTS IOS AND TOUCH GESTURES (tested on ipad and safari)\r\n\r\n## Demo\r\n\r\n[Here](http://experiments.thomschell.com/react-drag-sortable/demo/dist)\r\n\r\n## Usage\r\n\r\nImport the component :\r\n\r\n```bash\r\nimport DragSortableList from 'react-sortable-list'\r\n```\r\n\r\nUse the component :\r\n```bash\r\n<DragSortableList items={list} placeholder={placeholder} onSort={onSort} dropBackTransitionDuration={0.3} type=\"vertical\"/>\r\n<DragSortableList items={list} onSort={onSort} type=\"horizontal\"/>\r\n```\r\n\r\nYou can pass the following properties:\r\n- items: array of items to sort. Each item must be an object with a content property. You can optionally pass an array of classes that will be added to the item. For instance :\r\n```bash\r\n var list = [\r\n    {content: (<div>test1</div>), classes:['bigger']},\r\n    {content: (<div>test2</div>)},\r\n    {content: (<div>test3</div>), classes:['bigger']},\r\n    {content: (<div>test4</div>)}\r\n];\r\n```\r\n- type: 'vertical', 'horizontal' or 'grid'\r\n- moveTransitionDuration (number): if a duration is provided, items will animate when they move on drag. The CSS animation's duration is the number provided. \r\n- dropBackTransitionDuration (number): if a duration is provided, the dragged item will go back to its original position when not dropped on a different target. The CSS animation's duration is the number provided.\r\n- placeholder: content to display on drag target. If you don't pass a placeholder, a copy of the dragged item will be displayed. For instance:\r\n```bash\r\nvar placeholder = (\r\n    <div className=\"placeholderContent\">PLACEHOLDER</div>\r\n);\r\n```\r\n- callback function called on drop (when list is sorted). Takes the new sorted list as argument. For instance:\r\n```bash\r\n var onSort = function(sortedList) {\r\n    console.log(\"sortedList\", sortedList);\r\n }\r\n```\r\n```bash\r\nReactDOM.render(<DragSortableList items={list} placeholder={placeholder} onSort={onSort} type=\"vertical\"/>, document.getElementById('main'));\r\n```\r\n\r\n## Style\r\n\r\nThe list elements all have a class .draggable\r\nThe element being dragged has a class .dragged while it's being dragged\r\nThe placeholder has a class .placeholder\r\n\r\nFor instance, you can customize the style :\r\n\r\n```bash\r\n.draggable {\r\n    background-color: yellow;\r\n    margin: 10px;\r\n}\r\n\r\n.dragged {\r\n    opacity: 0.7;\r\n}\r\n\r\n.placeholder {\r\n  opacity: 0.5;\r\n}\r\n```\r\nYou can mix your custom classes (\"classes\" property in items list) with these classes for powerful styling.\r\nYou will find more complex examples of styling in the example folder.\r\n\r\n## Full example\r\n\r\n```bash\r\nrequire('./stylesheets/styles.scss');\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n// Components\r\nimport DragSortableList from '../src/dragSortableList.jsx'\r\n\r\nvar placeholder = (\r\n\t<div className=\"placeholderContent\"> DROP HERE ! </div>\r\n);\r\n\r\nvar list = [\r\n \t{content: (<span>test1</span>), classes:['test', 'bigger']},\r\n \t{content: (<span>test2</span>), classes:['test']},\r\n \t{content: (<span>test3</span>), classes:['test']},\r\n \t{content: (<span>test4</span>), classes:['test', 'bigger']}\r\n];\r\n\r\nvar listHorizontal = [\r\n \t{content: (<div>test1</div>), classes:['bigger']},\r\n \t{content: (<div>test2</div>)},\r\n \t{content: (<div>test3</div>), classes:['bigger']},\r\n \t{content: (<div>test4</div>)}\r\n];\r\n\r\nvar listGrid = [\r\n\t{content: (<div>test1</div>)},\r\n \t{content: (<div>test2</div>)},\r\n \t{content: (<div>test3</div>)},\r\n\t{content: (<div>test4</div>)},\r\n\t{content: (<div>test5</div>)},\r\n\t{content: (<div>test6</div>)},\r\n\t{content: (<div>test7</div>)},\r\n\t{content: (<div>test8</div>)},\r\n \t{content: (<div>test9</div>)}\r\n];\r\n\r\n var onSort = function(sortedList) {\r\n \tconsole.log(\"sortedList\", sortedList);\r\n }\r\n\r\nReactDOM.render(<DragSortableList items={list} moveTransitionDuration={0.3} onSort={onSort} type=\"vertical\"/>, document.getElementById('example1'));\r\nReactDOM.render(<DragSortableList items={listHorizontal} moveTransitionDuration={0.3} dropBackTransitionDuration={0.3} placeholder={placeholder} onSort={onSort} type=\"horizontal\"/>, document.getElementById('example2'));\r\nReactDOM.render(<DragSortableList items={listGrid} dropBackTransitionDuration={0.3} onSort={onSort} type=\"grid\"/>, document.getElementById('example3'));\r\n```\r\n\r\nThe example (containing both vertical and horizontal lists along with more complex styling) can be found in the demo folder and run using webpack with\r\n```bash\r\nnpm run dev\r\n```\r\n\r\n## Tests\r\n\r\nThese will be added soon. Please do not hesitate to add some !\r\n\r\n## About the Author\r\n\r\nI am a full-stack Javascript developer based in Lyon, France.\r\n\r\n[Check out my website](http://www.thomschell.com)\r\n\r\n## License\r\n\r\nreact-drag-sortable is dual licensed under the MIT license and GPL.\r\nFor more information click [here](https://opensource.org/licenses/MIT).\r\n","google":"UA-69967910-4","note":"Don't delete this file! It's used internally to help with page regeneration."}